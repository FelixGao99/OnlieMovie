@model OnlineMovieSystem.Models.Movie

@{
    ViewBag.Title = "Create";
}

<style>
    .posterViewImg {
        display: block;
        padding: 6px 12px;
        width: 150px;
        height: 150px;
        border: 1px solid #cccccc;
        border-radius: 4px;
        box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);
        -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);
    }
</style>

<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div id="formWrapper" class="form-horizontal">
        <h4>Movie</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.CnName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CnName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CnName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EnName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EnName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EnName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" style="display: none;">
            @Html.LabelFor(model => model.PosterUrl, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PosterUrl, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PosterUrl, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">海报预览：</label>
            <div class="col-md-10">
                <img id="posterViewImg" class="posterViewImg" src="#" alt="" />
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">上传海报：</label>
            <div class="col-md-10">
                <form id="posterForm" enctype="multipart/form-data">
                    <input type="file" id="inputPosterImg" name="img" value="" />
                </form>
                <button id="btnUploadPoster">上传图片</button>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ReleaseTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ReleaseTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ReleaseTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MovieLength, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MovieLength, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MovieLength, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LikeNum, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LikeNum, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LikeNum, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Plugin/ImgUploader/ImgUploder.js"></script>

    <script>

        $(function () {

            $("#btnUploadPoster").on("click", function (e) {
                e.preventDefault();

                var files = $('#inputPosterImg').prop('files');
                var data = new FormData();
                data.append('img', files[0]);

                $.ajax({
                    type: 'POST',
                    url: '/Upload/UploadMoviePoster',
                    processData: false,  // 告诉jQuery不要去处理发送的数据
                    contentType: false,  // 告诉jQuery不要去设置Content-Type请求头
                    data: data,
                    success: function (action) {
                        var result = eval('(' + action + ')');

                        alert(result.msg);

                        if (result.flag) {
                            $("#posterViewImg").attr('src', result.path);
                            $("#PosterUrl").val(result.path);
                        }
                    },
                    error: function (e) {
                        console.log(e);
                    }
                })
            });

        })

    </script>

}
